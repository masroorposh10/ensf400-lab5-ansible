---
# First Play
- name: Play - Handle Files in all hosts
  hosts: all
  tasks:
    - name: Ensure the directory exists for the Ansible project
      file:
        path: /workspaces/ensf400-lab5-ansible
        state: directory
        mode: '0755'

    - name: Ensure correct directory permissions
      command: chmod 755 /workspaces/ensf400-lab5-ansible
      become: true
      become_user: root
      ignore_errors: true

    - name: all host are identified with a file
      copy:
        content: My family is {{ ansible_os_family }}
        dest: ~/family.txt
        mode: '777'

# Second play
- name: Play - for Alpines Nodejs app
  hosts: app_group
  tasks:
    - name: Ensure the directory exists for the Ansible project
      file:
        path: /workspaces/ensf400-lab5-ansible
        state: directory
        mode: '0755'

    - name: NodeJs is installed
      apk:
        name: "{{ item }}"
        update_cache: yes
        state: latest
      loop:
        - nodejs
        - nodejs-npm

    - name: app directory is created
      file:
        path: /node-app
        state: directory

    - name: app is installed
      template:
        src: app.js.j2
        dest: /node-app/app.js

    - name: app dependencies file is copied
      copy:
        src: package.json
        dest: /node-app/package.json

    - name: app dependencies are installed
      npm:
        path: /node-app
        state: present
        production: true

    - name: Install forever (to run Node.js app).
      npm: name=forever global=yes state=present

    - name: Check list of Node.js apps running.
      command: forever list
      register: forever_list
      changed_when: false

    - name: Start example Node.js app.
      command: forever start /node-app/app.js
      when: "forever_list.stdout.find('/node-app/app.js') == -1"

# Third Play
- name: Install and configure Nginx load balancer
  hosts: loadbalancer
  tasks:
    - name: Update package cache
      become: true
      package:
        name: nginx
        state: latest

    - name: Ensure the directory exists for Nginx configuration
      file:
        path: /etc/nginx
        state: directory
      become: true

    - name: Copy Nginx configuration file
      copy:
        src: nginx.cfg
        dest: /etc/nginx/nginx.conf
      become: true

    - name: Restart Nginx service
      service:
        name: nginx
        state: restarted
      become: true